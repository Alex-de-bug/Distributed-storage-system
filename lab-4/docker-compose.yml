version: '3.8'

services:
  primary:
    image: primary
    build: ./primary/
    ports:
      - "5432:5432"
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
      - ./primary/postgresql.conf:/etc/postgresql/data/postgresql.conf
      - ./primary/pg_hba.conf:/etc/postgresql/data/pg_hba.conf
      - ./primary/backup.sh:/etc/backup.sh
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres 
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
    command: >
      postgres
    networks:
      - pg_network

  # replica:
  #   image: postgres:15 # Та же версия, что и у primary
  #   container_name: pg-replica
  #   restart: unless-stopped
  #   depends_on:
  #     primary:
  #       condition: service_healthy # Запускать реплику только после того, как primary будет готов
  #   ports:
  #     - "5433:5432" # Пробрасываем порт реплики на другой порт хоста (для read-only запросов)
  #   volumes:
  #     - pg_replica_data:/var/lib/postgresql/data
  #     - ./replica/pg_hba.conf:/etc/postgresql/pg_hba.conf # Перезаписываем HBA
  #     - ./replica/postgresql.conf:/etc/postgresql/postgresql.conf # Перезаписываем конфиг
  #     - ./replica/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh # Скрипт инициализации
  #   environment:
  #     POSTGRES_DB: mydatabase # Должны совпадать с primary для pg_basebackup
  #     POSTGRES_USER: user # Должны совпадать с primary для pg_basebackup
  #     POSTGRES_PASSWORD: password # Должны совпадать с primary для pg_basebackup
  #     REPLICATOR_USER: ${REPLICATOR_USER:-replicator} # Берем из переменных окружения хоста или по умолчанию
  #     REPLICATOR_PASSWORD: ${REPLICATOR_PASSWORD:-replicator_password} # Берем из переменных окружения хоста или по умолчанию
  #     PGDATA: /var/lib/postgresql/data # Явно указываем PGDATA для скрипта
  #   # entrypoint: ["/bin/bash", "-c"]
  #   # Запускаем сначала скрипт инициализации, а потом стандартный entrypoint postgres
  #   # Важно: стандартный entrypoint сам запустит postgres после выполнения скриптов из initdb.d
  #   # command: postgres -c config_file=/etc/postgresql/postgresql.conf
  #   networks:
  #     - pg_network

volumes:
  pg_primary_data:
  pg_replica_data:

networks:
  pg_network:
    driver: bridge
